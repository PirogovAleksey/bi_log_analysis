input {
  file {
    path => "/logs/banking_*.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    codec => "json"
  }
}

filter {
  # Parse timestamp
  date {
    match => [ "timestamp", "ISO8601", "yyyy-MM-dd HH:mm:ss" ]
    target => "@timestamp"
  }

  # Add geo-location data for IP addresses
  if [client_ip] {
    geoip {
      source => "client_ip"
      target => "geo"
    }
  }

  # Categorize transaction amounts
  if [transaction_type] == "transaction" and [amount] {
    ruby {
      code => '
        amount = event.get("amount").to_f
        if amount < 100
          event.set("amount_category", "small")
        elsif amount < 1000
          event.set("amount_category", "medium")
        elsif amount < 10000
          event.set("amount_category", "large")
        else
          event.set("amount_category", "very_large")
        end
      '
    }
  }

  # Flag suspicious activities
  if [transaction_type] == "transaction" and [amount] {
    ruby {
      code => '
        amount = event.get("amount").to_f
        status = event.get("status")

        # Flag large transactions
        if amount > 10000
          event.set("suspicious", true)
          event.set("suspicious_reason", "large_amount")
        end

        # Flag failed high-value transactions
        if amount > 5000 and status == "failed"
          event.set("suspicious", true)
          event.set("suspicious_reason", "high_value_failed")
        end
      '
    }
  }

  # Flag multiple failed login attempts
  if [transaction_type] == "authentication" and [status] == "failed" {
    mutate {
      add_field => { "security_event" => "failed_login" }
    }
  }

  # Parse user agent for ATM transactions
  if [user_agent] {
    useragent {
      source => "user_agent"
      target => "user_agent_parsed"
    }
  }
}

output {
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "banking-logs-%{+YYYY.MM.dd}"
  }

  # Output to console for debugging
  stdout {
    codec => rubydebug
  }
}
